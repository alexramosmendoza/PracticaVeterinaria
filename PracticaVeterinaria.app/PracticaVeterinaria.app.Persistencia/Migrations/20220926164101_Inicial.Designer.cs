// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticaVeterinaria.app.Persistencia;

namespace PracticaVeterinaria.app.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220926164101_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("fechaDeCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mascotaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("mascotaid");

                    b.ToTable("historiasclinicas");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Mascota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("propietarioid")
                        .HasColumnType("int");

                    b.Property<string>("raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("propietarioid");

                    b.ToTable("mascotas");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Propietario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("propietarios");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Veterinario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjetaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("veterinarios");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Visita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estadoAnimo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaVisita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formulaMedica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("frecCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("frecRespiratoria")
                        .HasColumnType("int");

                    b.Property<int?>("historiaClinicaid")
                        .HasColumnType("int");

                    b.Property<string>("peso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recomendaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("veterinarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("historiaClinicaid");

                    b.HasIndex("veterinarioid");

                    b.ToTable("visitas");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("PracticaVeterinaria.app.Dominio.Mascota", "mascota")
                        .WithMany()
                        .HasForeignKey("mascotaid");

                    b.Navigation("mascota");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Mascota", b =>
                {
                    b.HasOne("PracticaVeterinaria.app.Dominio.Propietario", "propietario")
                        .WithMany()
                        .HasForeignKey("propietarioid");

                    b.Navigation("propietario");
                });

            modelBuilder.Entity("PracticaVeterinaria.app.Dominio.Visita", b =>
                {
                    b.HasOne("PracticaVeterinaria.app.Dominio.HistoriaClinica", "historiaClinica")
                        .WithMany()
                        .HasForeignKey("historiaClinicaid");

                    b.HasOne("PracticaVeterinaria.app.Dominio.Veterinario", "veterinario")
                        .WithMany()
                        .HasForeignKey("veterinarioid");

                    b.Navigation("historiaClinica");

                    b.Navigation("veterinario");
                });
#pragma warning restore 612, 618
        }
    }
}
